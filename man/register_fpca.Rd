% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/register_fpca.R
\name{register_fpca}
\alias{register_fpca}
\title{Register curves from exponential family using constrained optimization and generalized FPCA}
\usage{
register_fpca(Y, Kt = 10, Kh = 4, family = "binomial", iterations = 20,
  npc = 1, ...)
}
\arguments{
\item{Y}{dataframe. Should have values id, value, index.}

\item{Kt}{number of B-spline basis functions used to estimate mean functions. 
Defaults to 10.}

\item{Kh}{number of B-spline basis functions used to estimate warping functions \emph{h}. Defaults to 5.}

\item{family}{\code{gaussian} or \code{binomial}.}

\item{iterations}{number of iterations between fpca step and registration step.}

\item{npc}{defaults to 1. Number of principal components to calculate.}

\item{...}{additional arguments passed to registr and fpca functions}
}
\value{
fpca_obj list of items from FPCA step

reg_object some registration stuff, should be cleaned up

time_warps list of time values for each iteration of the algorithm. time_warps[1] returns original (observed) time 
and time_warps[n] provides time values for the final iteration

loss Loss for each iteration of the algorithm. Loss is calculated in the registration step using an 
exponential family likelihood with natural parameter calculated in the FPCA step.

family \code{gaussian} or \code{binomial}.
}
\description{
Function combines constrained optimization and FPCA to estimate warping functions for exponential family data.
}
\examples{

\dontrun{
 simulate_unregistered_curves()
 reg_sim = register_fpca(Y_sim, Kt = 8, Kh = 4, family = "binomial", iterations = 10, npc = 1)
}

}
\author{
Julia Wrobel \email{jw3134@cumc.columbia.edu}
}
